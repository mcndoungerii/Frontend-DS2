name: CI/CD for Angular Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build Angular project
        run: npm run build --prod

      - name: Run Prettier check
        run: npm run prettier:check

      - name: Run Karma tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/frontend-ds2:${{ github.sha }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/frontend-ds2:${{ github.sha }}

      - name: Test SSH commmands on remote server
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: "${{secrets.TEST_SERVER_USER}}@${{secrets.TEST_SERVER_HOST}}"
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
          command: whoami

  deploy-to-test:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Pull Docker image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/frontend-ds2:${{ github.sha }}

      - name: Deploy to Test EC2
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: "${{secrets.TEST_SERVER_USER}}@${{secrets.TEST_SERVER_HOST}}"
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
          command: |
            docker stop frontend-ds2 || true && docker rm frontend-ds2 || true
            docker run -d --name frontend-ds2 -p 80:80 ${{ secrets.DOCKER_USERNAME }}/frontend-ds2:${{ github.sha }}
